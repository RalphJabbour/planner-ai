# docker-compose.yml
services:
  app:
    build: .
    container_name: behavior-analyzer-app
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/planner
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - db
      - redis
      - mlflow
    volumes:
      - ./app:/app/app
      - ml_models:/app/app/ml/models

  celery-worker:
    build: .
    container_name: behavior-analyzer-worker
    command: celery -A app.tasks.periodic worker --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/planner
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    depends_on:
      - app
      - redis
      - db
    volumes:
      - ./app:/app/app
      - ml_models:/app/app/ml/models

  celery-beat:
    build: .
    container_name: behavior-analyzer-beat
    command: celery -A app.tasks.periodic beat --loglevel=info
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/planner
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - app
      - redis
      - db
    volumes:
      - ./app:/app/app

  db:
    image: postgres:15
    container_name: behavior-analyzer-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=planner
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: behavior-analyzer-redis
    ports:
      - "6379:6379"

  mlflow:
    image: ghcr.io/mlflow/mlflow:latest
    container_name: mlflow
    ports:
      - "5000:5000"
    volumes:
      - ./mlruns:/mlruns
    environment:
      - MLFLOW_TRACKING_URI=http://localhost:5000
    command: mlflow server --host 0.0.0.0 --backend-store-uri /mlruns

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  ml_models:
  mlruns: